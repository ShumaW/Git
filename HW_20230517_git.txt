1.Как отказаться от изменений в файле (файлах) находящийся в рабочем каталоге (work directory)?
ФАЙЛЫ НЕ ДОЛЖНЫ БЫТЬ ДОБАВЛЕНЫ В ОЧЕРЕДЬ ИЛИ В КОММИТ!!!
git checkout . - убираем из файла все ненужные строки до add и commit безвозвратно

2.Как вернуть файл из индекса в рабочий каталог?
ЕСЛИ БЫЛ СДЕЛАН ADD:
git restore --stage <название файла> - превести файл в untracked

3.Как отменить ошибочный commit ?
git reset HEAD~<количество> - откатываемся назад на определённое колличество коммитов

4.Как создать новую ветку и переключится в нее?
git branch (название ветки) - создание новой ветки с нужным именем
git checkout (название ветки) - переключение на ветку
git checkout -b (название ветки) - создание и переключение одной командой
 
5.В чем отличение между fast-forward merge  and non fast-forfard merge?
Fast-forward merge когда текущая ветка не имеет дополнительных коммитов по сравнению с веткой, которую мы мержим. Этот тип мержа не создает новый коммит, а скорее объединяет коммит(ы) в ветку, которую мы объединяем прямо в текущей ветке. При non fast-forfard merge в обоих ветках были дополнительные коммиты. Git создает новый коммит мержа в активную ветку. Родительский коммит указывает на активную ветку и ветку, которую мы хотим объединить!

6.Когда может возникнуть конфликт слияния веток, как  его разрешить?
Конфликт может возникнуть прислиянии двух веток в обну, если до слияния веток в обоих ветках были сделаны дополнительные коммиты. Это может произойти, когда две ветки, которые мы пытаемся смержить, имеют изменения в одной строке в одном и том же файле, или если одна ветка удалила файл, который изменила другая ветка, и так далее. В этом случае Git попросит вас помочь решить, какой из двух вариантов мы хотим сохранить. После выпадания ошибки удалить ненужную строку вручную через любой редактор или оставить оба варианта (Accept both).
 
7.Можно ли удалить ветку? Как? 
git branch -d (название ветки) - удаление ветки (выдаст ошибку если не было слияния!!!)
git branch -D (название ветки) - пренудительное удаление ветки